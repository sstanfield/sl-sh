searchState.loadedDescShard("slosh_lib", 0, "Env (job control status, etc) for the shell.\nEnv (job control status, etc) for the shell.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConsume the Reader and return the internal Char iter.\nExpected that the user’s init.slosh will be in the user…\nWith the given reader, for each sexp compile then load and …\nGiven a <code>SloshVm</code> and a String, usually the rc file for …\nEscapes filenames from the completer so that special …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUnescape filenames for the completer so that special …\nensures all provided delimiters are balanced.\nensures all provided delimiters are balanced for a lisp …\nensures all provided delimiters are balanced for a shell …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf first non-whitespace char is ‘(’ assume this is an …")